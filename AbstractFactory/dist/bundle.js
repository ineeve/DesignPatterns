!function(t){var n={};function o(r){if(n[r])return n[r].exports;var e=n[r]={i:r,l:!1,exports:{}};return t[r].call(e.exports,e,e.exports,o),e.l=!0,e.exports}o.m=t,o.c=n,o.d=function(t,n,r){o.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,n){if(1&n&&(t=o(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var e in t)o.d(r,e,function(n){return t[n]}.bind(null,e));return r},o.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(n,"a",n),n},o.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},o.p="",o(o.s=0)}([function(t,n,o){"use strict";o.r(n);var r,e=function(){function t(){}return t.prototype.display=function(){},t}(),u=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(t,n)},function(t,n){function o(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}),i=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return u(n,t),n.prototype.display=function(){console.log("I'm a MacOS Button!")},n}(e),c=function(){function t(){}return t.prototype.display=function(){},t}(),p=function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function r(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),f=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return p(n,t),n.prototype.display=function(){console.log("I'm a MacOS dialog")},n}(c),a=function(){function t(){}return t.prototype.createButton=function(){return new i},t.prototype.createDialog=function(){return new f},t}(),l=function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function r(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),y=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return l(n,t),n.prototype.display=function(){console.log("I'm a Windows 10 button")},n}(e),s=function(){function t(){}return t.prototype.display=function(){console.log("I'm a windows 10 dialog")},t}(),_=function(){function t(){}return t.prototype.createButton=function(){return new y},t.prototype.createDialog=function(){return new s},t}(),d=function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function r(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),O=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return d(n,t),n.prototype.display=function(){console.log("I'm a Linux Button")},n}(e),b=function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function r(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),w=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return b(n,t),n.prototype.display=function(){console.log("I'm a linux dialog")},n}(c),h=function(){function t(){}return t.prototype.createButton=function(){return new O},t.prototype.createDialog=function(){return new w},t}();[new _,new h,new a].forEach(function(t){t.createButton().display(),t.createDialog().display()})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,