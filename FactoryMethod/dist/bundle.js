!function(t){var n={};function o(r){if(n[r])return n[r].exports;var e=n[r]={i:r,l:!1,exports:{}};return t[r].call(e.exports,e,e.exports,o),e.l=!0,e.exports}o.m=t,o.c=n,o.d=function(t,n,r){o.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,n){if(1&n&&(t=o(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var e in t)o.d(r,e,function(n){return t[n]}.bind(null,e));return r},o.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(n,"a",n),n},o.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},o.p="",o(o.s=0)}([function(t,n,o){"use strict";o.r(n);for(var r,e=function(){function t(){this.position=0}return t.prototype.move=function(t){void 0===t&&(t=0),this.position+=t},t}(),i=(r=function(t,n){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(t,n)},function(t,n){function o(){this.constructor=t}r(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}),u=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return i(n,t),n.prototype.move=function(n){void 0===n&&(n=6),t.prototype.move.call(this,n)},n}(e),c=function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function r(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),p=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return c(n,t),n.prototype.move=function(n){void 0===n&&(n=5),t.prototype.move.call(this,n)},n}(e),f=function(){var t=function(n,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var o in n)n.hasOwnProperty(o)&&(t[o]=n[o])})(n,o)};return function(n,o){function r(){this.constructor=n}t(n,o),n.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),a=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return f(n,t),n.prototype.move=function(n){void 0===n&&(n=1),t.prototype.move.call(this,n)},n}(e),l=function(){function t(){this.prevAnimal=null}return t.prototype.createAnimal=function(){return null==this.prevAnimal||2==this.prevAnimal?(this.prevAnimal=0,new u):0==this.prevAnimal?(this.prevAnimal=1,new p):(this.prevAnimal=2,new a)},t}(),s=function(){function t(){}return t.prototype.createAnimal=function(){var t=Math.random();return t<1/3?new u:t<2/3?new p:new a},t}(),y=new l,v=new s,m=[],h=[],_=0;_<10;_++)m.push(y.createAnimal()),h.push(v.createAnimal());m.forEach(function(t){return t.move()}),h.forEach(function(t){return t.move()});var d=function(t,n){return t+n},b=function(t){return t.position};console.log("balanced animals score",m.map(b).reduce(d)),console.log("random Animals score",h.map(b).reduce(d))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,